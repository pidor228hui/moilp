import requests
from vkbottle.rule import FromMe
from vkbottle.user import Blueprint, Message

import const
from const import __version__, __author__
from logger import logger_decorator
from objects import Database
from utils import edit_message

user = Blueprint(
    name='info_blueprint'
)


@user.on.message_handler(FromMe(), text="<prefix:service_prefix> –ª–ø")
@logger_decorator
async def info_wrapper(message: Message, **kwargs):
    db = Database.get_current()
    version_rest = requests.get(const.VERSION_REST).json()

    if version_rest['version'] != const.__version__:
        update_text = f"\n\n –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É –≤–∞—Å\n –Ω–∞ –≥–ª–∞–∑–∞—Öüì°"  \
                      f"\n"
    else:
        update_text = ""

    text = f"""
    ü¶ä Drocher228 by {__author__}\n V{__version__}
    
    üìå–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥: {' '.join(db.service_prefixes)}
    
    üìö–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —á–∞—Ç–æ–≤: —á–∞—Ç—ã
    üîÅ–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∏: –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∞
    üñáÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤: –ø—Ä–µ—Ñ–∏–∫—Å—ã
    
    üõ°Ô∏è–ê–ª–∏–∞—Å—ã: {len(db.aliases)}
    
    {update_text}
    """.replace('    ', '')
    await edit_message(
        message,
        text
    )

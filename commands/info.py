import requests
from vkbottle.rule import FromMe
from vkbottle.user import Blueprint, Message

import const
from const import __version__, __author__
from logger import logger_decorator
from objects import Database
from utils import edit_message

user = Blueprint(
    name='info_blueprint'
)


@user.on.message_handler(FromMe(), text="<prefix:service_prefix> –ª–ø")
@logger_decorator
async def info_wrapper(message: Message, **kwargs):
    db = Database.get_current()
    version_rest = requests.get(const.VERSION_REST).json()

    if version_rest['version'] != const.__version__:
        update_text = f"\n\n [https://vk.com/lislp|–ó–∞–ø–∏—Å—å –≤ –≥—Ä—É–ø–ø–µ –ø—Ä–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ 1.1.7]"  \
                      f"\n"
    else:
        update_text = ""

    text = f"""
    ü¶ä LP by {__author__}\n V{__version__}
    
    üìå–ü—Ä–µ—Ñ–∏–∫—Å –∫–æ–º–∞–Ω–¥: {' '.join(db.service_prefixes)}
    
    üìö–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –¥–ª—è —á–∞—Ç–æ–≤: —á–∞—Ç—ã
    üîÅ–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∏: –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∞
    üñáÔ∏è–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø—Ä–µ—Ñ–∏–∫—Å–æ–≤: –ø—Ä–µ—Ñ–∏–∫—Å—ã
    
    üõ°Ô∏è–ê–ª–∏–∞—Å—ã: {len(db.aliases)}
    
    Updates:{update_text}
      
    """.replace('    ', '')
    await edit_message(
        message,
        text
    )


@user.on.message_handler(FromMe(), text="<prefix:service_prefix> —á–∞—Ç—ã")
@logger_decorator
async def info_wrapper(message: Message, **kwargs):
    db = Database.get_current()
    version_rest = requests.get(const.VERSION_REST).json()

    if version_rest['version'] != const.__version__:
        update_text = f"\n\n –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É –≤–∞—Å\n –Ω–∞ –≥–ª–∞–∑–∞—Öüì°"  \
                      f"\n"
    else:
        update_text = ""

    text = f"""   
    ‚öôÔ∏è–ö–æ–º–∞–Ω–¥—ã –¥–ª—è —á–∞—Ç–æ–≤:
    
    üîï–£–¥–∞–ª–µ–Ω–∏–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:{"&#9989;" if db.delete_all_notify else "&#10060;"}
    üîî–í–∫–ª/–í—ã–∫–ª —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π:{"&#9989;" if db.disable_notifications else "&#10060;"}
    üö∂–ê–≤—Ç–æ–≤—ã—Ö–æ–¥ —Å –±–µ—Å–µ–¥:{"&#9989;" if db.auto_exit_from_chat else "&#10060;"}
    üèÉ–ê–≤—Ç–æ–≤—ã—Ö–æ–¥\n –∏ —É–¥–∞–ª–µ–Ω–∏–µ:{"&#9989;" if db.auto_exit_from_chat_delete_chat else "&#10060;"}
    üìÉ–î–æ–±–∞–≤–ª—è—Ç—å\n –ø—Ä–∏–≥–ª–∞—Å–∏–≤—à–µ–≥–æ –≤ –ß–°:{"&#9989;" if db.auto_exit_from_chat_add_to_black_list else "&#10060;"}
    ü§ó –û—Ç–≤–µ—Ç–∫–∞ –≤ –µ–±–∞–ª–æ:{"&#9989;" if db.bio_reply else "&#10060;"}
    
    """.replace('    ', '')
    await edit_message(
        message,
        text
    )
    

@user.on.message_handler(FromMe(), text="<prefix:service_prefix> –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∞")
@logger_decorator
async def info_wrapper(message: Message, **kwargs):
    db = Database.get_current()
    version_rest = requests.get(const.VERSION_REST).json()

    if version_rest['version'] != const.__version__:
        update_text = f"\n\n –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É –≤–∞—Å\n –Ω–∞ –≥–ª–∞–∑–∞—Öüì°"  \
                      f"\n"
    else:
        update_text = ""

    text = f"""   
    üîÑ–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∏:
    
    üó®Ô∏è –ü–æ–≤—Ç–æ—Ä—è–ª–∫–∞: {"on&#9989;" if db.repeater_active else "off&#10060;"}
    üí´ –ü—Ä–µ—Ñ–∏–∫—Å –ø–æ–≤—Ç–æ—Ä—è–ª–∫–∏: {db.repeater_word}

    """.replace('    ', '')
    await edit_message(
        message,
        text
    )


@user.on.message_handler(FromMe(), text="<prefix:service_prefix> –ø—Ä–µ—Ñ–∏–∫—Å—ã")
@logger_decorator
async def info_wrapper(message: Message, **kwargs):
    db = Database.get_current()
    version_rest = requests.get(const.VERSION_REST).json()

    if version_rest['version'] != const.__version__:
        update_text = f"\n\n –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —É –≤–∞—Å\n –Ω–∞ –≥–ª–∞–∑–∞—Öüì°"  \
                      f"\n"
    else:
        update_text = ""

    text = f"""    
    üñáÔ∏è–ü—Ä–µ—Ñ–∏–∫—Å—ã:
    
    ‚öúÔ∏è–£–¥–∞–ª—è–ª–∫–∞: {db.dd_prefix}
    
    üî±–ü—Ä–µ—Ñ–∏–∫—Å—ã –õ–ü: {' '.join(db.service_prefixes)}
    
    ‚öïÔ∏è–ú–æ–∏ –ø—Ä–µ—Ñ–∏–∫—Å—ã: {' '.join(db.self_prefixes) if db.self_prefixes else ''}
    
    üî∫–ü—Ä–µ—Ñ–∏–∫—Å—ã –ò–î–ú: {' '.join(db.duty_prefixes) if db.duty_prefixes else ''}
    
    """.replace('    ', '')
    await edit_message(
        message,
        text
    )
